{
  "contractName": "ICrawlerToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "calculateMintPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToCoord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coord",
          "type": "uint256"
        }
      ],
      "name": "coordToSeed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seed",
              "type": "uint256"
            },
            {
              "internalType": "uint232",
              "name": "yonder",
              "type": "uint232"
            },
            {
              "internalType": "uint8",
              "name": "chapter",
              "type": "uint8"
            },
            {
              "internalType": "enum Crawl.Terrain",
              "name": "terrain",
              "type": "uint8"
            },
            {
              "internalType": "enum Crawl.Dir",
              "name": "entryDir",
              "type": "uint8"
            }
          ],
          "internalType": "struct Crawl.ChamberSeed",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "chapterNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "coord",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "generateMaps",
          "type": "bool"
        }
      ],
      "name": "coordToChamberData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "coord",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "seed",
              "type": "uint256"
            },
            {
              "internalType": "uint232",
              "name": "yonder",
              "type": "uint232"
            },
            {
              "internalType": "uint8",
              "name": "chapter",
              "type": "uint8"
            },
            {
              "internalType": "enum Crawl.Terrain",
              "name": "terrain",
              "type": "uint8"
            },
            {
              "internalType": "enum Crawl.Dir",
              "name": "entryDir",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "enum Crawl.Gem",
                  "name": "gemType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "coins",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "worth",
                  "type": "uint16"
                }
              ],
              "internalType": "struct Crawl.Hoard",
              "name": "hoard",
              "type": "tuple"
            },
            {
              "internalType": "uint8",
              "name": "gemPos",
              "type": "uint8"
            },
            {
              "internalType": "uint8[4]",
              "name": "doors",
              "type": "uint8[4]"
            },
            {
              "internalType": "uint8[4]",
              "name": "locks",
              "type": "uint8[4]"
            },
            {
              "internalType": "uint256",
              "name": "bitmap",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "tilemap",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "enum Crawl.CustomDataType",
                  "name": "dataType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Crawl.CustomData[]",
              "name": "customData",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Crawl.ChamberData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToHoard",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Crawl.Gem",
              "name": "gemType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "coins",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "worth",
              "type": "uint16"
            }
          ],
          "internalType": "struct Crawl.Hoard",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "chapterNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "coord",
          "type": "uint256"
        }
      ],
      "name": "getChamberMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "chapterNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "coord",
          "type": "uint256"
        }
      ],
      "name": "getMapMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "chapterNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "coord",
          "type": "uint256"
        }
      ],
      "name": "getTokenMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"calculateMintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"chapterNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"generateMaps\",\"type\":\"bool\"}],\"name\":\"coordToChamberData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint232\",\"name\":\"yonder\",\"type\":\"uint232\"},{\"internalType\":\"uint8\",\"name\":\"chapter\",\"type\":\"uint8\"},{\"internalType\":\"enum Crawl.Terrain\",\"name\":\"terrain\",\"type\":\"uint8\"},{\"internalType\":\"enum Crawl.Dir\",\"name\":\"entryDir\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"enum Crawl.Gem\",\"name\":\"gemType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"coins\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"worth\",\"type\":\"uint16\"}],\"internalType\":\"struct Crawl.Hoard\",\"name\":\"hoard\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"gemPos\",\"type\":\"uint8\"},{\"internalType\":\"uint8[4]\",\"name\":\"doors\",\"type\":\"uint8[4]\"},{\"internalType\":\"uint8[4]\",\"name\":\"locks\",\"type\":\"uint8[4]\"},{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"tilemap\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"enum Crawl.CustomDataType\",\"name\":\"dataType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Crawl.CustomData[]\",\"name\":\"customData\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Crawl.ChamberData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"}],\"name\":\"coordToSeed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint232\",\"name\":\"yonder\",\"type\":\"uint232\"},{\"internalType\":\"uint8\",\"name\":\"chapter\",\"type\":\"uint8\"},{\"internalType\":\"enum Crawl.Terrain\",\"name\":\"terrain\",\"type\":\"uint8\"},{\"internalType\":\"enum Crawl.Dir\",\"name\":\"entryDir\",\"type\":\"uint8\"}],\"internalType\":\"struct Crawl.ChamberSeed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"chapterNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"}],\"name\":\"getChamberMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"chapterNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"}],\"name\":\"getMapMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"chapterNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"coord\",\"type\":\"uint256\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIdToCoord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenIdToHoard\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Crawl.Gem\",\"name\":\"gemType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"coins\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"worth\",\"type\":\"uint16\"}],\"internalType\":\"struct Crawl.Hoard\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ICrawlerToken.sol\":\"ICrawlerToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Crawl.sol\":{\"keccak256\":\"0xb769e62ace633d2c84dd9b3236d99705e18d11a322009e7a247e3eae0e7064c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9883ac73d893b227d614ac1792280b4a8fb219da5bdf41e15f8ad82f531eede6\",\"dweb:/ipfs/QmWYQTCnmeU5EVZFWpC8eu1oU7VH1nfCqr7Uo5VdwsjhRm\"]},\"project:/contracts/ICrawlerToken.sol\":{\"keccak256\":\"0xd5f9276fb6c404e15294a13d0d548f8337f783aef4a27941fec9a1c4205a925e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfd4eb29db6636cf9f61f915b8cfad99ab52c7e390e1a1d8d3fd88c8335a703f\",\"dweb:/ipfs/QmamFKRJfZwyquzb3RNinHYzniY73Cb1xU5jacr5jsbD9D\"]},\"project:/contracts/extras/IERC721Enumerable.sol\":{\"keccak256\":\"0x7b0f91afc8424c1ee8aa3e2aa96c668b6a7f459f029a358e9ff230045294867c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a408c38eff49dacd6a0228e7bd79b4158d76c13eb1ff69de685ecb08ff9d16cf\",\"dweb:/ipfs/QmPf1vpkqthhJPv3cotZwVaGnisLcJqRJRnBXvmStMQ2yu\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n//\n//    ██████████\n//   █          █\n//  █            █\n//  █            █\n//  █            █\n//  █    ░░░░    █\n//  █   ▓▓▓▓▓▓   █\n//  █  ████████  █\n//\n// https://endlesscrawler.io\n// @EndlessCrawler\n//\n/// @title Endless Crawler Chamber Minter Interface\n/// @author Studio Avante\n//\npragma solidity ^0.8.16;\nimport { IERC165 } from '@openzeppelin/contracts/utils/introspection/IERC165.sol';\nimport { IERC721 } from '@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport { IERC721Metadata } from '@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport { IERC721Enumerable } from './extras/IERC721Enumerable.sol';\nimport { Crawl } from './Crawl.sol';\n\ninterface ICrawlerToken is IERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n\tfunction isPaused() external view returns (bool);\n\tfunction getPrices() external view returns (uint256, uint256);\n\tfunction calculateMintPrice(address to) external view returns (uint256);\n\tfunction tokenIdToCoord(uint256 tokenId) external view returns (uint256);\n\tfunction coordToSeed(uint256 coord) external view returns (Crawl.ChamberSeed memory);\n\tfunction coordToChamberData(uint8 chapterNumber, uint256 coord, bool generateMaps) external view returns (Crawl.ChamberData memory);\n\tfunction tokenIdToHoard(uint256 tokenId) external view returns (Crawl.Hoard memory);\n\t// Metadata calls\n\tfunction getChamberMetadata(uint8 chapterNumber, uint256 coord) external view returns (string memory);\n\tfunction getMapMetadata(uint8 chapterNumber, uint256 coord) external view returns (string memory);\n\tfunction getTokenMetadata(uint8 chapterNumber, uint256 coord) external view returns (string memory);\n}\n",
  "sourcePath": "/Users/roger/Dev/Blockchain/Truffle/ec-crawler/contracts/ICrawlerToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/ICrawlerToken.sol",
    "exportedSymbols": {
      "Crawl": [
        4787
      ],
      "ICrawlerToken": [
        9892
      ],
      "IERC165": [
        2159
      ],
      "IERC721": [
        1310
      ],
      "IERC721Enumerable": [
        10643
      ],
      "IERC721Metadata": [
        1355
      ]
    },
    "id": 9893,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9792,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "403:24:30"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "id": 9794,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9893,
        "sourceUnit": 2160,
        "src": "428:82:30",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9793,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2159,
              "src": "437:7:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 9796,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9893,
        "sourceUnit": 1311,
        "src": "511:75:30",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9795,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1310,
              "src": "520:7:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "id": 9798,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9893,
        "sourceUnit": 1356,
        "src": "587:102:30",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9797,
              "name": "IERC721Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1355,
              "src": "596:15:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/extras/IERC721Enumerable.sol",
        "file": "./extras/IERC721Enumerable.sol",
        "id": 9800,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9893,
        "sourceUnit": 10644,
        "src": "690:67:30",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9799,
              "name": "IERC721Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10643,
              "src": "699:17:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Crawl.sol",
        "file": "./Crawl.sol",
        "id": 9802,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9893,
        "sourceUnit": 4788,
        "src": "758:36:30",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9801,
              "name": "Crawl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4787,
              "src": "767:5:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9803,
              "name": "IERC165",
              "nameLocations": [
                "823:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2159,
              "src": "823:7:30"
            },
            "id": 9804,
            "nodeType": "InheritanceSpecifier",
            "src": "823:7:30"
          },
          {
            "baseName": {
              "id": 9805,
              "name": "IERC721",
              "nameLocations": [
                "832:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1310,
              "src": "832:7:30"
            },
            "id": 9806,
            "nodeType": "InheritanceSpecifier",
            "src": "832:7:30"
          },
          {
            "baseName": {
              "id": 9807,
              "name": "IERC721Metadata",
              "nameLocations": [
                "841:15:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1355,
              "src": "841:15:30"
            },
            "id": 9808,
            "nodeType": "InheritanceSpecifier",
            "src": "841:15:30"
          },
          {
            "baseName": {
              "id": 9809,
              "name": "IERC721Enumerable",
              "nameLocations": [
                "858:17:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10643,
              "src": "858:17:30"
            },
            "id": 9810,
            "nodeType": "InheritanceSpecifier",
            "src": "858:17:30"
          }
        ],
        "canonicalName": "ICrawlerToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 9892,
        "linearizedBaseContracts": [
          9892,
          10643,
          1355,
          1310,
          2159
        ],
        "name": "ICrawlerToken",
        "nameLocation": "806:13:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "b187bd26",
            "id": 9815,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nameLocation": "888:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:2:30"
            },
            "returnParameters": {
              "id": 9814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9815,
                  "src": "922:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "921:6:30"
            },
            "scope": 9892,
            "src": "879:49:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "bd9a548b",
            "id": 9822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrices",
            "nameLocation": "939:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:2:30"
            },
            "returnParameters": {
              "id": 9821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9822,
                  "src": "974:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9822,
                  "src": "983:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:18:30"
            },
            "scope": 9892,
            "src": "930:62:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dc865ba5",
            "id": 9829,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMintPrice",
            "nameLocation": "1003:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1030:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9829,
                  "src": "1022:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:12:30"
            },
            "returnParameters": {
              "id": 9828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9829,
                  "src": "1057:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:9:30"
            },
            "scope": 9892,
            "src": "994:72:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e5e7fdfa",
            "id": 9836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIdToCoord",
            "nameLocation": "1077:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9831,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1100:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9836,
                  "src": "1092:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:17:30"
            },
            "returnParameters": {
              "id": 9835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9836,
                  "src": "1132:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:9:30"
            },
            "scope": 9892,
            "src": "1068:73:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d085e7c1",
            "id": 9844,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "coordToSeed",
            "nameLocation": "1152:11:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9838,
                  "mutability": "mutable",
                  "name": "coord",
                  "nameLocation": "1172:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9844,
                  "src": "1164:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:15:30"
            },
            "returnParameters": {
              "id": 9843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9844,
                  "src": "1202:24:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ChamberSeed_$3041_memory_ptr",
                    "typeString": "struct Crawl.ChamberSeed"
                  },
                  "typeName": {
                    "id": 9841,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9840,
                      "name": "Crawl.ChamberSeed",
                      "nameLocations": [
                        "1202:5:30",
                        "1208:11:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3041,
                      "src": "1202:17:30"
                    },
                    "referencedDeclaration": 3041,
                    "src": "1202:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ChamberSeed_$3041_storage_ptr",
                      "typeString": "struct Crawl.ChamberSeed"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:26:30"
            },
            "scope": 9892,
            "src": "1143:85:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "c4b2eaac",
            "id": 9856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "coordToChamberData",
            "nameLocation": "1239:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9846,
                  "mutability": "mutable",
                  "name": "chapterNumber",
                  "nameLocation": "1264:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "1258:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9845,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9848,
                  "mutability": "mutable",
                  "name": "coord",
                  "nameLocation": "1287:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "1279:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9850,
                  "mutability": "mutable",
                  "name": "generateMaps",
                  "nameLocation": "1299:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "1294:17:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9849,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:55:30"
            },
            "returnParameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9856,
                  "src": "1336:24:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ChamberData_$3079_memory_ptr",
                    "typeString": "struct Crawl.ChamberData"
                  },
                  "typeName": {
                    "id": 9853,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9852,
                      "name": "Crawl.ChamberData",
                      "nameLocations": [
                        "1336:5:30",
                        "1342:11:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3079,
                      "src": "1336:17:30"
                    },
                    "referencedDeclaration": 3079,
                    "src": "1336:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ChamberData_$3079_storage_ptr",
                      "typeString": "struct Crawl.ChamberData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1335:26:30"
            },
            "scope": 9892,
            "src": "1230:132:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "831e1907",
            "id": 9864,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIdToHoard",
            "nameLocation": "1373:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9858,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1396:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9864,
                  "src": "1388:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:17:30"
            },
            "returnParameters": {
              "id": 9863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9864,
                  "src": "1428:18:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Hoard_$3087_memory_ptr",
                    "typeString": "struct Crawl.Hoard"
                  },
                  "typeName": {
                    "id": 9861,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9860,
                      "name": "Crawl.Hoard",
                      "nameLocations": [
                        "1428:5:30",
                        "1434:5:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3087,
                      "src": "1428:11:30"
                    },
                    "referencedDeclaration": 3087,
                    "src": "1428:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Hoard_$3087_storage_ptr",
                      "typeString": "struct Crawl.Hoard"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:20:30"
            },
            "scope": 9892,
            "src": "1364:84:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8525a5d9",
            "id": 9873,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getChamberMetadata",
            "nameLocation": "1478:18:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9866,
                  "mutability": "mutable",
                  "name": "chapterNumber",
                  "nameLocation": "1503:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1497:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9865,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1497:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9868,
                  "mutability": "mutable",
                  "name": "coord",
                  "nameLocation": "1526:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1518:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1496:36:30"
            },
            "returnParameters": {
              "id": 9872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9873,
                  "src": "1556:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9870,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1555:15:30"
            },
            "scope": 9892,
            "src": "1469:102:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "24e6df79",
            "id": 9882,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMapMetadata",
            "nameLocation": "1582:14:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9875,
                  "mutability": "mutable",
                  "name": "chapterNumber",
                  "nameLocation": "1603:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9882,
                  "src": "1597:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9874,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "coord",
                  "nameLocation": "1626:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9882,
                  "src": "1618:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:36:30"
            },
            "returnParameters": {
              "id": 9881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9882,
                  "src": "1656:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9879,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1656:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1655:15:30"
            },
            "scope": 9892,
            "src": "1573:98:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "ed62c797",
            "id": 9891,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenMetadata",
            "nameLocation": "1682:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9884,
                  "mutability": "mutable",
                  "name": "chapterNumber",
                  "nameLocation": "1705:13:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "1699:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9883,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9886,
                  "mutability": "mutable",
                  "name": "coord",
                  "nameLocation": "1728:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "1720:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:36:30"
            },
            "returnParameters": {
              "id": 9890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "1758:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9888,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1758:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1757:15:30"
            },
            "scope": 9892,
            "src": "1673:100:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9893,
        "src": "796:979:30",
        "usedErrors": []
      }
    ],
    "src": "403:1373:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-03T15:59:06.112Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenURI(uint256)": {
        "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}